plugins {
    id 'com.android.application'
    id 'com.google.dagger.hilt.android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.alancamargo.weapons'
    compileSdk target_sdk_version

    defaultConfig {
        applicationId "com.alancamargo.weapons"
        minSdk min_sdk_version
        targetSdk target_sdk_version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias "${weapons_key_alias}"
            keyPassword "${weapons_key_password}"
            storeFile file("${weapons_store_file}")
            storePassword "${weapons_store_password}"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }

        release {
            debuggable false
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    buildFeatures {
        viewBinding true
    }

    flavorDimensions "version"

    productFlavors {
        ww1 {
            dimension "version"
            applicationIdSuffix ".ww1"
            versionCode ww1_version_code
            versionName "$ww1_version_name"
        }

        ww2 {
            dimension "version"
            applicationIdSuffix ".ww2"
            versionCode ww2_version_code
            versionName "$ww2_version_name"
        }

        korea {
            dimension "version"
            applicationIdSuffix ".korea"
            versionCode korea_version_code
            versionName "$korea_version_name"
        }

        vietnam {
            dimension "version"
            applicationIdSuffix ".vietnam"
            versionCode vietnam_version_code
            versionName "$vietnam_version_name"
        }
    }

    compileOptions {
        sourceCompatibility java_version
        targetCompatibility java_version
    }

    kotlinOptions {
        jvmTarget = java_version.toString()
    }

    kotlin {
        jvmToolchain(java_version)
    }

    sourceSets {
        main {
            assets {
                srcDirs 'src/main/assets', 'src/test/assets'
            }
        }
    }
}

dependencies {
    implementation platform("$firebase_bom")

    implementation "$android_appcompat"
    implementation "$android_core"
    implementation "$android_material"
    implementation "$coil"
    implementation "$firebase_analytics"
    implementation "$firebase_crashlytics"
    implementation "$google_ads"
    implementation "$hilt_android"
    implementation "$lifecycle_view_model"
    implementation "$room"
    implementation "$room_runtime"

    kapt "$hilt_compiler"
    kapt "$room_compiler"

    testImplementation "$junit"
    testImplementation "$truth"
    testImplementation "$mockk_android"

    androidTestImplementation "$android_espresso_core"
    androidTestImplementation "$mockk_android"
}